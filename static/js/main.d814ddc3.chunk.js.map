{"version":3,"sources":["pages/homepage.js","pages/randomcatimage.js","pages/randomdogimage.js","pages/memetemplate.js","App.js","functionhandler/main.js","reportWebVitals.js","index.js"],"names":["Homepage","CatImage","catImage","GetCatImage","Button","variant","onClick","className","src","alt","DogImage","dogImage","GetDogImage","FunnyImage","memeTmp","GetMemeTemplate","App","fetch","then","response","json","data","catImg","file","setState","dogImg","url","method","res","randomNum","Math","floor","random","meme","memes","state","Nav","defaultActiveKey","as","Item","Link","href","path","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d814ddc3.chunk.js","sourcesContent":["const Homepage = () => {\r\n    return ( \r\n\r\n        <div>\r\n\r\n            <h1>Welcome to my API tester</h1>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Homepage;","import { Button } from 'react-bootstrap';\r\n\r\nconst CatImage = ({ catImage, GetCatImage }) => {\r\n    return ( \r\n\r\n        <div>\r\n\r\n            <h2> Cat Image Generator </h2>\r\n           \r\n            <Button variant=\"success\" onClick={GetCatImage}>Press for some pussy</Button>\r\n\r\n            <div> { catImage !== '' ? <img className=\"theCatImage\" src={ catImage } alt=\"kittycat\"  /> : '' } </div> \r\n\r\n\r\n        </div>\r\n\r\n    );\r\n} \r\n\r\nexport default CatImage;","import { Button } from 'react-bootstrap';\r\n\r\nconst DogImage = ({ dogImage, GetDogImage }) => {\r\n    return ( \r\n\r\n        <div>\r\n\r\n            <h2> Dog Image Generator </h2>\r\n           \r\n            <Button variant=\"primary\" onClick={GetDogImage}>Press for a doggy</Button>\r\n\r\n            <div> { dogImage !== '' ? <img className=\"theDogImage\" src={ dogImage } alt=\"doggydog\"  /> : '' } </div> \r\n\r\n\r\n        </div>\r\n\r\n    );\r\n} \r\n\r\nexport default DogImage;","import { Button } from 'react-bootstrap';\r\n\r\nconst FunnyImage = ({ memeTmp, GetMemeTemplate }) => {\r\n\r\n    return ( \r\n\r\n        <div>\r\n\r\n            <h2> Meme Template Generator </h2>\r\n           \r\n            <Button variant=\"secondary\" onClick={GetMemeTemplate}>Press for a meme template</Button>\r\n\r\n            <div> { memeTmp !== '' ? <img className=\"memeSize\" src={ memeTmp }  alt=\"funnypicture\" /> : '' } </div> \r\n\r\n        </div>\r\n\r\n    );\r\n} \r\n\r\nexport default FunnyImage;","import React, { Component } from 'react';\n\nimport Homepage from './pages/homepage';\nimport CatImage from './pages/randomcatimage'\nimport DogImage from './pages/randomdogimage';\n// eslint-disable-next-line\nimport FunnyImage from './pages/memetemplate';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav } from 'react-bootstrap';\n// eslint-disable-next-line \nimport { Route, Link } from 'react-router-dom';\n\nimport { fetchCatImage } from './functionhandler/main';\nimport { fetchDogImage } from './functionhandler/main';\nimport { fetchMemeTemplate } from './functionhandler/main';\n\n\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n        catImage: '',\n        dogImage: '',\n        memeTmp: ''\n        }\n    }\n\n    // componentDidMount() {\n    //     this.GetCatImage();\n    // }\n\n\n    GetCatImage = () => {\n        return fetchCatImage().then(data => {\n\n            let catImg = data.file;\n            this.setState({ catImage: catImg })\n\n        })\n    }\n\n    GetDogImage = () => {\n        return fetchDogImage().then(data => {\n\n            let dogImg = data.url;\n            this.setState({ dogImage: dogImg })\n\n        })\n    }\n\n    GetMemeTemplate = () => {\n        return fetchMemeTemplate().then(res => {\n            \n            let randomNum = Math.floor(Math.random() * 20) + 1;\n\n            let meme = res.data.memes[randomNum].url\n            this.setState({ memeTmp: meme })\n\n        })\n    }\n\n    render() {\n        return ( \n            <div className=\"App\">\n                  \n                <header>\n                    <nav> \n                    <ul> \n\n                    <Nav defaultActiveKey=\"/homepage\" as=\"ul\">\n                     <Nav.Item as=\"li\">\n                         <Nav.Link href=\"/homepage\">Homepage</Nav.Link>\n                     </Nav.Item>\n                     <Nav.Item as=\"li\">\n                        <Nav.Link href=\"/randomcatimage\">Cat Image</Nav.Link>\n                     </Nav.Item>\n                     <Nav.Item as=\"li\">\n                        <Nav.Link href=\"/randomdogimage\">Dog Image</Nav.Link>\n                     </Nav.Item>\n                     <Nav.Item as=\"li\">\n                        <Nav.Link href=\"/memetemplate\">Meme Template</Nav.Link>\n                    </Nav.Item>\n                    </Nav>\n\n                    </ul>\n                    </nav>\n                </header>\n               \n                <main>\n               \n                    <Route path=\"/homepage\">\n\n                    <Homepage> \n                        \n                    </Homepage>\n\n                    </Route>\n                    <Route path=\"/randomcatimage\">\n \n                        <CatImage catImage={ this.state.catImage } GetCatImage={ this.GetCatImage } />\n\n                    </Route>\n                    <Route path=\"/randomdogimage\">\n\n                        <DogImage dogImage={ this.state.dogImage } GetDogImage={ this.GetDogImage }/>\n                            \n                    </Route>\n                    <Route path=\"/memetemplate\">\n\n                        <FunnyImage memeTmp={ this.state.memeTmp } GetMemeTemplate={ this.GetMemeTemplate }/>\n    \n                    </Route>\n\n                </main>\n               \n            </div>\n        )\n    }\n\n\n\n  }\n\n \n\nexport default App;\n","export function fetchCatImage() {\r\n    return fetch('https://aws.random.cat/meow').then(response => response.json());\r\n    //{\"file\":\"https:\\/\\/purr.objects-us-east-1.dream.io\\/i\\/GQXOl.png\"}\r\n}\r\n\r\nexport function fetchDogImage() {\r\n    return fetch('https://random.dog/woof.json').then(response => response.json());\r\n    //{\"fileSizeBytes\":81302,\"url\":\"https://random.dog/5d9b4f1f-ed47-47d2-95b4-ac58ac0834b7.jpg\"}\r\n}\r\n\r\nexport function fetchMemeTemplate() {\r\n\r\n    return fetch(`https://api.imgflip.com/get_memes`, \r\n    {method: 'GET' }).then(response => response.json());\r\n    //too long...\r\n    \r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}